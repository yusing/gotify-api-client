// Code generated by go-swagger; DO NOT EDIT.

package application

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/yusing/gotify-api-client/v2/models"
)

// GetAppsReader is a Reader for the GetApps structure.
type GetAppsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAppsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAppsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAppsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAppsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /application] getApps", response, response.Code())
	}
}

// NewGetAppsOK creates a GetAppsOK with default headers values
func NewGetAppsOK() *GetAppsOK {
	return &GetAppsOK{}
}

/*
GetAppsOK describes a response with status code 200, with default header values.

Ok
*/
type GetAppsOK struct {
	Payload []*models.Application
}

// IsSuccess returns true when this get apps o k response has a 2xx status code
func (o *GetAppsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get apps o k response has a 3xx status code
func (o *GetAppsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get apps o k response has a 4xx status code
func (o *GetAppsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get apps o k response has a 5xx status code
func (o *GetAppsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get apps o k response a status code equal to that given
func (o *GetAppsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get apps o k response
func (o *GetAppsOK) Code() int {
	return 200
}

func (o *GetAppsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /application][%d] getAppsOK %s", 200, payload)
}

func (o *GetAppsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /application][%d] getAppsOK %s", 200, payload)
}

func (o *GetAppsOK) GetPayload() []*models.Application {
	return o.Payload
}

func (o *GetAppsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppsUnauthorized creates a GetAppsUnauthorized with default headers values
func NewGetAppsUnauthorized() *GetAppsUnauthorized {
	return &GetAppsUnauthorized{}
}

/*
GetAppsUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAppsUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get apps unauthorized response has a 2xx status code
func (o *GetAppsUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get apps unauthorized response has a 3xx status code
func (o *GetAppsUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get apps unauthorized response has a 4xx status code
func (o *GetAppsUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get apps unauthorized response has a 5xx status code
func (o *GetAppsUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get apps unauthorized response a status code equal to that given
func (o *GetAppsUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get apps unauthorized response
func (o *GetAppsUnauthorized) Code() int {
	return 401
}

func (o *GetAppsUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /application][%d] getAppsUnauthorized %s", 401, payload)
}

func (o *GetAppsUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /application][%d] getAppsUnauthorized %s", 401, payload)
}

func (o *GetAppsUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAppsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppsForbidden creates a GetAppsForbidden with default headers values
func NewGetAppsForbidden() *GetAppsForbidden {
	return &GetAppsForbidden{}
}

/*
GetAppsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAppsForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get apps forbidden response has a 2xx status code
func (o *GetAppsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get apps forbidden response has a 3xx status code
func (o *GetAppsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get apps forbidden response has a 4xx status code
func (o *GetAppsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get apps forbidden response has a 5xx status code
func (o *GetAppsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get apps forbidden response a status code equal to that given
func (o *GetAppsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get apps forbidden response
func (o *GetAppsForbidden) Code() int {
	return 403
}

func (o *GetAppsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /application][%d] getAppsForbidden %s", 403, payload)
}

func (o *GetAppsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /application][%d] getAppsForbidden %s", 403, payload)
}

func (o *GetAppsForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetAppsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
