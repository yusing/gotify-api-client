// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/yusing/gotify-api-client/v2/models"
)

// CurrentUserReader is a Reader for the CurrentUser structure.
type CurrentUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CurrentUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCurrentUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCurrentUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCurrentUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /current/user] currentUser", response, response.Code())
	}
}

// NewCurrentUserOK creates a CurrentUserOK with default headers values
func NewCurrentUserOK() *CurrentUserOK {
	return &CurrentUserOK{}
}

/*
CurrentUserOK describes a response with status code 200, with default header values.

Ok
*/
type CurrentUserOK struct {
	Payload *models.UserExternal
}

// IsSuccess returns true when this current user o k response has a 2xx status code
func (o *CurrentUserOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this current user o k response has a 3xx status code
func (o *CurrentUserOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this current user o k response has a 4xx status code
func (o *CurrentUserOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this current user o k response has a 5xx status code
func (o *CurrentUserOK) IsServerError() bool {
	return false
}

// IsCode returns true when this current user o k response a status code equal to that given
func (o *CurrentUserOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the current user o k response
func (o *CurrentUserOK) Code() int {
	return 200
}

func (o *CurrentUserOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /current/user][%d] currentUserOK %s", 200, payload)
}

func (o *CurrentUserOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /current/user][%d] currentUserOK %s", 200, payload)
}

func (o *CurrentUserOK) GetPayload() *models.UserExternal {
	return o.Payload
}

func (o *CurrentUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserExternal)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCurrentUserUnauthorized creates a CurrentUserUnauthorized with default headers values
func NewCurrentUserUnauthorized() *CurrentUserUnauthorized {
	return &CurrentUserUnauthorized{}
}

/*
CurrentUserUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CurrentUserUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this current user unauthorized response has a 2xx status code
func (o *CurrentUserUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this current user unauthorized response has a 3xx status code
func (o *CurrentUserUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this current user unauthorized response has a 4xx status code
func (o *CurrentUserUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this current user unauthorized response has a 5xx status code
func (o *CurrentUserUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this current user unauthorized response a status code equal to that given
func (o *CurrentUserUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the current user unauthorized response
func (o *CurrentUserUnauthorized) Code() int {
	return 401
}

func (o *CurrentUserUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /current/user][%d] currentUserUnauthorized %s", 401, payload)
}

func (o *CurrentUserUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /current/user][%d] currentUserUnauthorized %s", 401, payload)
}

func (o *CurrentUserUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *CurrentUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCurrentUserForbidden creates a CurrentUserForbidden with default headers values
func NewCurrentUserForbidden() *CurrentUserForbidden {
	return &CurrentUserForbidden{}
}

/*
CurrentUserForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CurrentUserForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this current user forbidden response has a 2xx status code
func (o *CurrentUserForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this current user forbidden response has a 3xx status code
func (o *CurrentUserForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this current user forbidden response has a 4xx status code
func (o *CurrentUserForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this current user forbidden response has a 5xx status code
func (o *CurrentUserForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this current user forbidden response a status code equal to that given
func (o *CurrentUserForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the current user forbidden response
func (o *CurrentUserForbidden) Code() int {
	return 403
}

func (o *CurrentUserForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /current/user][%d] currentUserForbidden %s", 403, payload)
}

func (o *CurrentUserForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /current/user][%d] currentUserForbidden %s", 403, payload)
}

func (o *CurrentUserForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *CurrentUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
