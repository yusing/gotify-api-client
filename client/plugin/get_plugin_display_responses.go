// Code generated by go-swagger; DO NOT EDIT.

package plugin

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/yusing/gotify-api-client/v2/models"
)

// GetPluginDisplayReader is a Reader for the GetPluginDisplay structure.
type GetPluginDisplayReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPluginDisplayReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPluginDisplayOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetPluginDisplayUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPluginDisplayForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPluginDisplayNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPluginDisplayInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /plugin/{id}/display] getPluginDisplay", response, response.Code())
	}
}

// NewGetPluginDisplayOK creates a GetPluginDisplayOK with default headers values
func NewGetPluginDisplayOK() *GetPluginDisplayOK {
	return &GetPluginDisplayOK{}
}

/*
GetPluginDisplayOK describes a response with status code 200, with default header values.

Ok
*/
type GetPluginDisplayOK struct {
	Payload string
}

// IsSuccess returns true when this get plugin display o k response has a 2xx status code
func (o *GetPluginDisplayOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get plugin display o k response has a 3xx status code
func (o *GetPluginDisplayOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plugin display o k response has a 4xx status code
func (o *GetPluginDisplayOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get plugin display o k response has a 5xx status code
func (o *GetPluginDisplayOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get plugin display o k response a status code equal to that given
func (o *GetPluginDisplayOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get plugin display o k response
func (o *GetPluginDisplayOK) Code() int {
	return 200
}

func (o *GetPluginDisplayOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugin/{id}/display][%d] getPluginDisplayOK %s", 200, payload)
}

func (o *GetPluginDisplayOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugin/{id}/display][%d] getPluginDisplayOK %s", 200, payload)
}

func (o *GetPluginDisplayOK) GetPayload() string {
	return o.Payload
}

func (o *GetPluginDisplayOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPluginDisplayUnauthorized creates a GetPluginDisplayUnauthorized with default headers values
func NewGetPluginDisplayUnauthorized() *GetPluginDisplayUnauthorized {
	return &GetPluginDisplayUnauthorized{}
}

/*
GetPluginDisplayUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetPluginDisplayUnauthorized struct {
	Payload *models.Error
}

// IsSuccess returns true when this get plugin display unauthorized response has a 2xx status code
func (o *GetPluginDisplayUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plugin display unauthorized response has a 3xx status code
func (o *GetPluginDisplayUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plugin display unauthorized response has a 4xx status code
func (o *GetPluginDisplayUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get plugin display unauthorized response has a 5xx status code
func (o *GetPluginDisplayUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get plugin display unauthorized response a status code equal to that given
func (o *GetPluginDisplayUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get plugin display unauthorized response
func (o *GetPluginDisplayUnauthorized) Code() int {
	return 401
}

func (o *GetPluginDisplayUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugin/{id}/display][%d] getPluginDisplayUnauthorized %s", 401, payload)
}

func (o *GetPluginDisplayUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugin/{id}/display][%d] getPluginDisplayUnauthorized %s", 401, payload)
}

func (o *GetPluginDisplayUnauthorized) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPluginDisplayUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPluginDisplayForbidden creates a GetPluginDisplayForbidden with default headers values
func NewGetPluginDisplayForbidden() *GetPluginDisplayForbidden {
	return &GetPluginDisplayForbidden{}
}

/*
GetPluginDisplayForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetPluginDisplayForbidden struct {
	Payload *models.Error
}

// IsSuccess returns true when this get plugin display forbidden response has a 2xx status code
func (o *GetPluginDisplayForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plugin display forbidden response has a 3xx status code
func (o *GetPluginDisplayForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plugin display forbidden response has a 4xx status code
func (o *GetPluginDisplayForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get plugin display forbidden response has a 5xx status code
func (o *GetPluginDisplayForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get plugin display forbidden response a status code equal to that given
func (o *GetPluginDisplayForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get plugin display forbidden response
func (o *GetPluginDisplayForbidden) Code() int {
	return 403
}

func (o *GetPluginDisplayForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugin/{id}/display][%d] getPluginDisplayForbidden %s", 403, payload)
}

func (o *GetPluginDisplayForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugin/{id}/display][%d] getPluginDisplayForbidden %s", 403, payload)
}

func (o *GetPluginDisplayForbidden) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPluginDisplayForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPluginDisplayNotFound creates a GetPluginDisplayNotFound with default headers values
func NewGetPluginDisplayNotFound() *GetPluginDisplayNotFound {
	return &GetPluginDisplayNotFound{}
}

/*
GetPluginDisplayNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetPluginDisplayNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get plugin display not found response has a 2xx status code
func (o *GetPluginDisplayNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plugin display not found response has a 3xx status code
func (o *GetPluginDisplayNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plugin display not found response has a 4xx status code
func (o *GetPluginDisplayNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get plugin display not found response has a 5xx status code
func (o *GetPluginDisplayNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get plugin display not found response a status code equal to that given
func (o *GetPluginDisplayNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get plugin display not found response
func (o *GetPluginDisplayNotFound) Code() int {
	return 404
}

func (o *GetPluginDisplayNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugin/{id}/display][%d] getPluginDisplayNotFound %s", 404, payload)
}

func (o *GetPluginDisplayNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugin/{id}/display][%d] getPluginDisplayNotFound %s", 404, payload)
}

func (o *GetPluginDisplayNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPluginDisplayNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPluginDisplayInternalServerError creates a GetPluginDisplayInternalServerError with default headers values
func NewGetPluginDisplayInternalServerError() *GetPluginDisplayInternalServerError {
	return &GetPluginDisplayInternalServerError{}
}

/*
GetPluginDisplayInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetPluginDisplayInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this get plugin display internal server error response has a 2xx status code
func (o *GetPluginDisplayInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get plugin display internal server error response has a 3xx status code
func (o *GetPluginDisplayInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get plugin display internal server error response has a 4xx status code
func (o *GetPluginDisplayInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get plugin display internal server error response has a 5xx status code
func (o *GetPluginDisplayInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get plugin display internal server error response a status code equal to that given
func (o *GetPluginDisplayInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get plugin display internal server error response
func (o *GetPluginDisplayInternalServerError) Code() int {
	return 500
}

func (o *GetPluginDisplayInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugin/{id}/display][%d] getPluginDisplayInternalServerError %s", 500, payload)
}

func (o *GetPluginDisplayInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /plugin/{id}/display][%d] getPluginDisplayInternalServerError %s", 500, payload)
}

func (o *GetPluginDisplayInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetPluginDisplayInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
